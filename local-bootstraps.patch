diff --git a/termux-app/build.gradle.kts b/termux-app/build.gradle.kts
index 543c0e2c..757efeaa 100644
--- a/termux-app/build.gradle.kts
+++ b/termux-app/build.gradle.kts
@@ -112,77 +112,6 @@ task("versionName") {
     }
 }
 
-fun downloadFile(localUrl: String, remoteUrl: String, expectedChecksum: String) {
-    val digest = MessageDigest.getInstance("SHA-256")
-
-    val file = File(projectDir, localUrl)
-    if (file.exists()) {
-        val buffer = ByteArray(8192)
-        val input = FileInputStream(file)
-        while (true) {
-            val readBytes = input.read(buffer)
-            if (readBytes < 0) break
-            digest.update(buffer, 0, readBytes)
-        }
-        var checksum = BigInteger(1, digest.digest()).toString(16)
-        while (checksum.length < 64) { checksum = "0$checksum" }
-        if (checksum == expectedChecksum) {
-            return
-        } else {
-            logger.warn("Deleting old local file with wrong hash: $localUrl: expected: $expectedChecksum, actual: $checksum")
-            file.delete()
-        }
-    }
-
-    logger.quiet("Downloading $remoteUrl ...")
-
-    file.parentFile.mkdirs()
-    val out = BufferedOutputStream(FileOutputStream(file))
-
-    val connection = URI(remoteUrl).toURL().openConnection()
-    val digestStream = DigestInputStream(connection.inputStream, digest)
-    digestStream.transferTo(out)
-    out.close()
-
-    var checksum = BigInteger(1, digest.digest()).toString(16)
-    while (checksum.length < 64) { checksum = "0$checksum" }
-    if (checksum != expectedChecksum) {
-        file.delete()
-        throw GradleException("Wrong checksum for $remoteUrl:\n Expected: $expectedChecksum\n Actual:   $checksum")
-    }
-}
-
-tasks {
-    getByName<Delete>("clean") {
-        doLast {
-            val tree = fileTree(File(projectDir, "src/main/cpp"))
-            tree.include("bootstrap-*.zip")
-            tree.forEach { it.delete() }
-        }
-    }
-}
-
-task("downloadPrebuilt") {
-    doLast {
-        val bootstrapVersion = "7"
-        downloadFile("src/main/cpp/bootstrap-aarch64.zip", "https://bootstrap.termux.net/bootstrap-aarch64-v$bootstrapVersion.zip", "da651a534d5994ac1421302259dde6f494fb9df28063a19c4374c636f1a6d1a1")
-        downloadFile("src/main/cpp/bootstrap-x86_64.zip", "https://bootstrap.termux.net/bootstrap-x86_64-v$bootstrapVersion.zip", "af897f53ddde18bc243c37540c216f9dcd9c983471e8268e0984f7840755d617")
-
-        val prootVersion = "5.1.107-65"
-        downloadFile("src/main/jniLibs/arm64-v8a/libproot-loader.so", "https://bootstrap.termux.net/libproot-loader-aarch64-$prootVersion.so", "23cbee2320ed6f55ec4c47d50573a3ee59163f84c6e1bfaf7fb67049f71a2b59")
-        downloadFile("src/main/jniLibs/x86_64/libproot-loader.so", "https://bootstrap.termux.net/libproot-loader-x86_64-$prootVersion.so", "bf69995d5c9d35591197ce61f6046e80116858334109bf9b6ea9d787ca2fe256")
-        downloadFile("src/main/jniLibs/arm64-v8a/libproot-loader32.so", "https://bootstrap.termux.net/libproot-loader32-aarch64-$prootVersion.so", "8e0d7fbdc5937886c272a3ef7c2c1d1b62ab51dcfc542b938675bf05baf4a83a")
-        downloadFile("src/main/jniLibs/x86_64/libproot-loader32.so", "https://bootstrap.termux.net/libproot-loader32-x86_64-$prootVersion.so", "b33f2ef262ec0458504e6327d84c7d7b87cc504c0ea53cf3eccc60a3746241b2")
-    }
-}
-
-afterEvaluate {
-    android.applicationVariants.all { variant ->
-        variant.javaCompileProvider.dependsOn("downloadPrebuilt")
-        true
-    }
-}
-
 // https://stackoverflow.com/questions/75274720/a-failure-occurred-while-executing-appcheckdebugduplicateclasses/
 configurations.implementation {
    exclude("org.jetbrains.kotlin", "kotlin-stdlib-jdk8")
